/*** Run the app locally using command line
***/

mvn clean install
mvn install liberty:run-server

/*** UPort
***/

Public key: 0x04120168c6bf832910b5dc75a05d1268fd237e1e8bec3fe95cd2a08a2abb06e6b8da58b02afb857c7e6af3e8b5a556d0dc922b687fb8397f236cf76bb0b963f35c

import { Connect, SimpleSigner } from 'uport-connect'

const uport = new Connect('Cycle', {
clientId: '2ojxCynUCy1VWqWJNJSVFAoRRyCPZDkSPw1',
network: 'rinkeby or ropsten or kovan',
signer: SimpleSigner('e42efa79fadf96bfb9e9c4b0f75ea010640f55adcdc3cbdfa13638fe361d923d')
})

// Request credentials to login
uport.requestCredentials({
requested: ['name', 'phone', 'country'],
notifications: true // We want this if we want to recieve credentials
})
.then((credentials) => {
// Do something
})

// Attest specific credentials
uport.attestCredentials({
sub: THE_RECEIVING_UPORT_ADDRESS,
claim: {
CREDENTIAL_NAME: CREDENTIAL_VALUE
},
exp: new Date().getTime() + 30 * 24 * 60 * 60 * 1000, // 30 days from now
})
    
## Reading and writing data Ethereum

writing data is called a transaction 
whereas 
reading data is called a call

/*** RPC
***/

// Accounts:
(0) 0x627306090abab3a6e1400e9345bc60c78a8bef57
(1) 0xf17f52151ebef6c7334fad080c5704d77216b732
(2) 0xc5fdf4076b8f3a5357c5e395ab970b5b54098fef
(3) 0x821aea9a577a9b44299b9c15c88cf3087f3b5544
(4) 0x0d1d4e623d10f9fba5db95830f7d3839406c6af2
(5) 0x2932b7a2355d6fecc4b5c0b6bd44cc31df247a2e
(6) 0x2191ef87e392377ec08e7c08eb105ef5448eced5
(7) 0x0f4f2ac550a1b4e2280d04c21cea7ebd822934b5
(8) 0x6330a553fc93768f612722bb8c2ec78ac90b3bbc
(9) 0x5aeda56215b167893e80b4fe645ba6d5bab767de

// Private Keys:
(0) c87509a1c067bbde78beb793e6fa76530b6382a4c0241e5e4a9ec0a0f44dc0d3
(1) ae6ae8e5ccbfb04590405997ee2d52d2b330726137b875053c36d94e974d162f
(2) 0dbbe8e4ae425a6d2687f1a7e3ba17bc98c673636790f1b8ad91193c05875ef1
(3) c88b703fb08cbea894b6aeff5a544fb92e78a18e19814cd85da83b71f772aa6c
(4) 388c684f0ba1ef5017716adb5d21a053ea8e90277d0868337519f97bede61418
(5) 659cbb0e2411a44db63778987b1e22153c086a95eb6b18bdf89de078917abc63
(6) 82d052c865f5763aad42add438569276c00d3d88a2d062d36b2bae914d58b8c8
(7) aa3680d5d48a8283413f7a108367c7299ca73f553735860a87b08f39395618b7
(8) 0f62d96d6675f32685bbdb8ac13cda7c23436f63efbb9d07700d8669ff12b7c4
(9) 8d5366123cb560bb606379f90a0bfd4769eecc0557f1b362dcae9012b548b1e5


/// Machine Learning

First: Query the token for ML service

$ curl --basic --user 0457b6fb-93c8-4049-81c3-807dc0d78368:914cc844-01dd-4274-a0cd-85b1e900d168 https://ibm-watson-ml.mybluemix.net/v3/identity/token

eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJ0ZW5hbnRJZCI6IjE0NjU4MGUyLWExMTUtNGJlMy05YjE0LTAyNTc1NzcyNWI3NiIsImluc3RhbmNlSWQiOiIxNDY1ODBlMi1hMTE1LTRiZTMtOWIxNC0wMjU3NTc3MjViNzYiLCJwbGFuSWQiOiIzZjZhY2Y0My1lZGU4LTQxM2EtYWM2OS1mOGFmM2JiMGNiZmUiLCJyZWdpb24iOiJ1cy1zb3V0aCIsInVzZXJJZCI6IjA0NTdiNmZiLTkzYzgtNDA0OS04MWMzLTgwN2RjMGQ3ODM2OCIsImlzcyI6Imh0dHBzOi8vaWJtLXdhdHNvbi1tbC5teWJsdWVtaXgubmV0L3YzL2lkZW50aXR5IiwiaWF0IjoxNTE0MDk5NjU4LCJleHAiOjE1MTQxMjg0NTh9.Wh7K_HXX1t07fINJZs6x2gM5MukVM1mudoWVb7ubZSfz3qytBEKRm8NhzTMdlV3lDgZdILzU7L59zRR_EM1KbW6N8rodAhUo_2UspMRYd0kyRZUzwp8yKE1ICPmCZKj2Y2E-TLYIn3h7CsJFRakPCaLGy0W336Xz1qTT0XHL-ca144b7TNhBtBRYSKpyp8jVyZrdhvvx7t3bGuUe6u7nP5vvm5-YEQChho-0eu5WLOTuIxjm7xtUjf27MsCg2kn5DUR0kW8303CqCQyTG51IoMWAVxvKfaf-NhK86GLL3eh-LAtQd542COYdyHbQQhXtEChkrEiORNXEsMsvUzKGYQ

Second: Use the token for query the ML model

curl -X POST 
--header 'Content-Type: application/json' 
--header 'Accept: application/json' 
--header 'Authorization: Bearer eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJ0ZW5hbnRJZCI6IjE0NjU4MGUyLWExMTUtNGJlMy05YjE0LTAyNTc1NzcyNWI3NiIsImluc3RhbmNlSWQiOiIxNDY1ODBlMi1hMTE1LTRiZTMtOWIxNC0wMjU3NTc3MjViNzYiLCJwbGFuSWQiOiIzZjZhY2Y0My1lZGU4LTQxM2EtYWM2OS1mOGFmM2JiMGNiZmUiLCJyZWdpb24iOiJ1cy1zb3V0aCIsInVzZXJJZCI6IjA0NTdiNmZiLTkzYzgtNDA0OS04MWMzLTgwN2RjMGQ3ODM2OCIsImlzcyI6Imh0dHBzOi8vaWJtLXdhdHNvbi1tbC5teWJsdWVtaXgubmV0L3YzL2lkZW50aXR5IiwiaWF0IjoxNTE0MDk5NjU4LCJleHAiOjE1MTQxMjg0NTh9.Wh7K_HXX1t07fINJZs6x2gM5MukVM1mudoWVb7ubZSfz3qytBEKRm8NhzTMdlV3lDgZdILzU7L59zRR_EM1KbW6N8rodAhUo_2UspMRYd0kyRZUzwp8yKE1ICPmCZKj2Y2E-TLYIn3h7CsJFRakPCaLGy0W336Xz1qTT0XHL-ca144b7TNhBtBRYSKpyp8jVyZrdhvvx7t3bGuUe6u7nP5vvm5-YEQChho-0eu5WLOTuIxjm7xtUjf27MsCg2kn5DUR0kW8303CqCQyTG51IoMWAVxvKfaf-NhK86GLL3eh-LAtQd542COYdyHbQQhXtEChkrEiORNXEsMsvUzKGYQ' 
-d '{"fields": ["Time","Sub_metering_1","Sub_metering_2","Sub_metering_3", "Charge"],"values": [[180400,0,37,16,6.6666667],[183500,0,27,17,3.333333333]]}' 'https://ibm-watson-ml.mybluemix.net/v3/wml_instances/eccb216b-505a-4c13-8ab0-8ea9b43ae167/published_models/709cd1bd-227e-4df4-9104-af1555fc7695/deployments/ccfbc053-d54a-4596-890e-1cc377f0309e/online'

